- Choose a color palette - > 
https://coolors.co/visualizer/fffcf2-ccc5b9-403d39-252422-eb5e28
- Box shadows ->
https://getcssscan.com/css-box-shadow-examples

Review slider ->
https://www.youtube.com/watch?v=Kx8XlKRBZx8

using new api to get poster image ->
https://www.themoviedb.org/
full_path = "https://image.tmdb.org/t/p/w500/" + poster_path

Movie table->
int movieid, varchar movie title, movieid float average rating, 

User table->
int userid, varchar username, **user pfp but not sure how to do** ,varchar bio, var char top3 list

Review table->
int reviewid, int userid, int movieid, int rating (between 1-10), text comment



make login page not able to go navigate back to

user page needed fetch {
    create/alter user fetch,
    alter user info fetch,
    favourite movie poster fetch,
    ratings fetch,
    review fetch,
    username fetch
}

favorite button fetch {
    add that movie to the userid favorite table 
    add movie poster url to it also
}

movie page fetch {
    all reviews,
    all the ratings,
}

I HAVE FINALLY CONNECTED IT TO TEH BACKEND OFEDNSOFNDOSHJFOSDJFIOSDF

ADD DATE JOINED INTO THE USER INFO AND REWORK THE REST OF IT BECAUSE I DONT LIKE IT

Due to free website hosting limitations, need to make one big api call instead of all the little ones

Variable to see isSearching because then it would display user's info
Big fetch would need to do 

**userpfp
- username
- datejoined, bio, watchlist
- reviews + ratings and distribute it in the two grid cells
- 

DELETED LIST OF RATING FETCH BECAUSE I HAVE TO TEST OUT THE FUNCTIONS 

import { db } from "@vercel/postgres";

export default async function handler(request, response) {
    const userID = request.query.userID;
    const client = await db.connect();
        try {
            const listOfRatings = await client.sql`
                SELECT
                    SUM(CASE WHEN rating = 1 THEN 1 ELSE 0 END) AS n1,
                    SUM(CASE WHEN rating = 2 THEN 1 ELSE 0 END) AS n2,
                    SUM(CASE WHEN rating = 3 THEN 1 ELSE 0 END) AS n3,
                    SUM(CASE WHEN rating = 4 THEN 1 ELSE 0 END) AS n4,
                    SUM(CASE WHEN rating = 5 THEN 1 ELSE 0 END) AS n5,
                    SUM(CASE WHEN rating = 6 THEN 1 ELSE 0 END) AS n6,
                    SUM(CASE WHEN rating = 7 THEN 1 ELSE 0 END) AS n7,
                    SUM(CASE WHEN rating = 8 THEN 1 ELSE 0 END) AS n8,
                    SUM(CASE WHEN rating = 9 THEN 1 ELSE 0 END) AS n9,
                    SUM(CASE WHEN rating = 10 THEN 1 ELSE 0 END) AS n10
                FROM 
                    reviews
                WHERE 
                    userID = ${userID};`;
            
            return response.status(200).json({ratingDistribution : listOfRatings.rows[0]});
    
        } catch (error) {
            console.error('Error getting user ratings:', error);
            return response.status(500).json({ error: 'Internal Server Error' });
        }
}